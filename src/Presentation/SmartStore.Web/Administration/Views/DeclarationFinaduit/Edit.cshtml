@model OrderModel
@using Telerik.Web.Mvc.UI;
@using SmartStore.Core.Domain.Tax;
@using SmartStore.Core.Domain.Catalog;
@{
    ViewBag.Title = T("Admin.Orders.EditOrderDetails").Text;
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "order-form" }))
{
    <div class="section-header">
        <div class="title">
            @T("Admin.Orders.EditOrderDetails") - @Model.OrderNumber 
			<a href='@Url.Action("OrderManageList")'>(@T("Admin.Orders.BackToList"))</a>
        </div>
        <div class="options">
			@{ Html.RenderWidget("admin_button_toolbar_before"); }
          
            <input type="submit" id="btnRefreshPage" name="btnRefreshPage" class="d-none" />

			@{ Html.RenderWidget("admin_button_toolbar_after"); }
        </div>
    </div>

    @Html.ValidationSummary(false)

    @Html.SmartStore().TabStrip().Name("order-edit").Style(TabsStyle.Material).Items(x =>
{
    x.Add().Text(T("订单信息").Text).Content(TabInfo()).Selected(true);
    x.Add().Text(T("发货").Text).Content(TabBillingAndShipment());
    x.Add().Text(T("Admin.Orders.Products").Text).Content(TabProducts());
    //x.Add().Text(T("Admin.Orders.OrderNotes").Text).Content(TabOrderNotes());
    //x.Add().Text(T("Admin.Common.GenericAttributes").Text).Content(TabOrderAttributes());

    //generate an event
    EngineContext.Current.Resolve<IEventPublisher>().Publish(new TabStripCreated(x, "order-edit", this.Html, this.Model));
})
}

@Html.DeleteConfirmation("order-delete")

@helper TabInfo()
{
	@Html.Partial("_Edit.Info")
}

@helper TabBillingAndShipment()
{
	@Html.Partial("_Edit.BillingAndShipment")
}

@helper TabProducts()
{
	@Html.Partial("_Edit.Products")
}


@{ Html.RenderPartial("_AutoUpdateOrderItem", Model.AutoUpdateOrderItem); }