@model CheckoutPaymentMethodModel
@using SmartStore.Web.Models.Checkout;
@{
    Layout = "_Checkout";
    Html.AddTitleParts(T("PageTitle.Checkout").Text);
    Html.AddBodyCssClass("no-offcanvas-cart");
}

@section orderProgress{
    @{ Html.RenderAction("CheckoutProgress", "DeclarationCheckout", new { step = dCheckoutProgressStep.Payment }); }
}
@Html.HiddenFor(x => x.CustomerComment)
@Html.HiddenFor(x => x.Mobile)
<div class="page payment-method-page">
    <div class="page-title">
        <h1 class="h3">@T("Checkout.SelectPaymentMethod")</h1>
    </div>
    <div class="page-body checkout-data">
        @using (Html.BeginForm())
        {
            Html.RenderWidget("checkout_payment_method_top");
        <p class="page-intro lead">
            @Html.Raw(@Model.customer.Username)
            @Html.Raw(@Model.customer.FirstName)
            @Html.Raw(@Model.customer.Mobile)
        </p>
            <ul class="list-group opt-list payment-methods">
                <li class="list-group-item opt-list-item payment-method-item active">
                    <div class="opt-data">
                        <div class="form-check opt-control option-name radio">
                            <input id="paymentmethod_1" type="radio" name="paymentmethod" checked="checked"
                                   data-has-info='true'
                                   data-lazy-info='false'
                                   class="opt-radio form-check-input"
                                   value="余额代付" />

                            <label class="form-check-label" for="paymentmethod_1">
                                <span class="opt-name">余额代付</span>
                            </label>
                        </div>
                        @Html.SettingEditorFor(model => model.PaymentMethods.FirstOrDefault().BrandUrl, Html.EditorFor(m => m.PaymentMethods.FirstOrDefault().BrandUrl, "Picture", new { transientUpload = true, validate = true }))

                        <div class="pd-oldp1rice d-flex">
                            <span>可用余额:</span>
                            <span class="pd-oldp1rice pl-1" style="text-decoration:none;">@Model.WithdrawalTotal.TotalAmount.ToString("F2")</span>
                        </div>
                        <div class="pd-oldp1rice d-flex">
                            <span>订单总额:</span>
                            <span class="pd-oldp1rice pl-1" style="text-decoration:none;">@Model.Total.ToString("F2")</span>
                        </div>
                    </div>

                    <div class="opt-info-item payment-method-description">
                        余额代付：使用我的可提现额度支付订单，订单审批通过后自动从钱包扣款
                    </div>
                </li>
            </ul>
            <div class="buttons">
                <a class="btn btn-secondary btn-lg" href="@Url.Action("ProxyConfirm")">
                    <i class="fa fa-angle-left"></i>
                    <span>@T("Common.Back")</span>
                </a>
                <input type="hidden" id="CustomerComment" value="@Model.CustomerComment" />
                <input type="submit" name="nextstep" id="nextstep" class="d-none" />

                <button id="checkout" class="btn btn-warning btn-lg payment-method-next-step-button" onclick="$('#nextstep').trigger('click');return false;">
                    <span>@T("Checkout.NextButton")</span>
                    <i class="fa fa-angle-right"></i>
                </button>
            </div>
            Html.RenderWidget("checkout_payment_method_bottom");
        }
    </div>
</div>

<script>
    $(function () {
        //$("#checkout").hide();
        //$("#BrandUrl").change(function () { if ($("#BrandUrl").val() && $("#BrandUrl").val() != "0") { console.log(1); $("#checkout").show(); } else { $("#checkout").hide(); }  });
        //$(".remove").change(function () { if ($("#BrandUrl").val() && $("#BrandUrl").val() != "0") { console.log(1); $("#checkout").show(); } else { $("#checkout").hide(); } });
		var validationSummary = $('#payment-info-validation-summary');

		if (validationSummary.length) {
			$.scrollTo(validationSummary, 600, { offset: -100 });
		}

		$('.checkout-data .opt-radio').on('change', function (e) {
			var radio = $(this);
			var systemName = radio.val();

			function removeInfoPanels() {
				$('.checkout-data .opt-info').each(function (i, val) {
					var el = $(val);
					if (el.data('system-name') != systemName && el.data('lazy-info')) {
						el.remove();
					}
				});
            }

            function disableNextStepButton (disable) {
                var btn = $('button.payment-method-next-step-button');
                btn.prop('disabled', disable);
                btn.find('.fa')
                    .removeClass('fa-angle-right fa-spinner fa-spin')
                    .addClass(disable ? 'fa-spinner fa-spin' : 'fa-angle-right');
            };

			$('.checkout-data .opt-list-item').removeClass('active');

			var item = radio.closest('.opt-list-item');
			item.addClass("active");

			if (!radio.data("has-info") || !radio.data("lazy-info")) {
				removeInfoPanels();
				return;
            }

            disableNextStepButton(true);

			$.ajax({
				type: 'POST',
				cache: false,
				dataType: 'html',
				async: true,
				url: '@Url.Action("PaymentInfoAjax")',
				data: { paymentMethodSystemName: systemName },
				success: function (html) {
					if (!html) return;

					var panel = item.find('.opt-info');

					if (panel.length == 0) {
						panel = $('<div class="opt-info payment-method-info"></div>')
							.appendTo(item)
							.data('system-name', systemName)
							.data('lazy-info', true);
					}

					panel.html(html);
					applyCommonPlugins(panel);
				},
				error: function (xhr, ajaxOptions, thrownError) {
					console.error(thrownError);
				},
                complete: function () {
                    disableNextStepButton(false);
					// Remove all other info containers.
                    removeInfoPanels();
				}
			});
		});
	});
</script>

<script>
	window['onAvatarUploaded'] = function (e, el, data) {
		var result = data.result;
		if (result.success) {
            window.location = '@Url.Action("Payment", "DeclarationCheckout", new { area = "" })';
		}
	};

    window['onAvatarRemoved'] = function (e, el) {
		$(this).doPostData({
			url: '@Url.Action("RemovePayment", "DeclarationCheckout", new { area = "" })'
		});
	}
</script>