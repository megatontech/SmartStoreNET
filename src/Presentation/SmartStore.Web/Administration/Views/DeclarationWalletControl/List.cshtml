@model Telerik.Web.Mvc.GridModel<DeclarationCalcRule>
@using Telerik.Web.Mvc.UI
@using SmartStore.Core.Domain.Wallet;
@{
    ViewBag.Title = T("钱包算法管理").Text;
}
<div class="section-header">
    <div class="title">
        @T("钱包算法参数设置")
    </div>
    <div class="options">
        @{ Html.RenderWidget("admin_button_toolbar_before"); }

        <a href="@Url.Action("Create")" class="btn btn-primary">
            <i class="fa fa-plus"></i>
            <span>@T("Admin.Common.AddNew")</span>
        </a>

        @{ Html.RenderWidget("admin_button_toolbar_after"); }
    </div>
</div>

@*<div>
    @(Html.Telerik().Grid<DeclarationCalcRule>(Model.Data)
		.Name("discounts-grid")
		.Columns(columns =>
		{
			columns.Bound(x => x.isUse)
				.Width(400)
				.Template(x => Html.ActionLink(x.Name, "Edit", new { id = x.Id }))
				.ClientTemplate("<a href=\"Edit/<#= Id #>\"><#= Name #></a>");
			columns.Bound(x => x.UpdateTime)
				.Width(120);
			columns.Bound(x => x.)
				.Width(120);
			columns.Bound(x => x.UsePercentage)
				.Width(120)
				.Template(item => @Html.SymbolForBool(item.UsePercentage))
				.ClientTemplate(@Html.SymbolForBool("UsePercentage"))
				.Centered();
			columns.Bound(x => x.FormattedDiscountPercentage)
				.Width(120)
				.Centered();
			columns.Bound(x => x.FormattedDiscountAmount)
				.Width(120)
				.RightAlign();
		})
		.DataBinding(dataBinding => dataBinding.Ajax().Select("List", "Discount"))
		.EnableCustomBinding(true))
</div>*@